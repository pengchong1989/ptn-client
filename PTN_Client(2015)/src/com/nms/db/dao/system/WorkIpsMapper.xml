<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nms.db.dao.system.WorkIpsMapper" >
  <resultMap id="BaseResultMap" type="WorkIps" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="fileId" property="field" jdbcType="INTEGER" />
    <result column="workIp1" property="workIp1" jdbcType="VARCHAR" />
    <result column="workIp2" property="workIp2" jdbcType="VARCHAR" />
    <result column="workIp3" property="workIp3" jdbcType="VARCHAR" />
    <result column="workIp4" property="workIp4" jdbcType="VARCHAR" />
    <result column="workIp5" property="workIp5" jdbcType="VARCHAR" />
    <result column="workIp6" property="workIp6" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, fileId, workIp1, workIp2, workIp3, workIp4, workIp5, workIp6
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from workips
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from workips
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="WorkIps" >
    insert into workips (id, fileId, workIp1, 
      workIp2, workIp3, workIp4, 
      workIp5, workIp6)
    values (#{id,jdbcType=INTEGER}, #{fileid,jdbcType=INTEGER}, #{workip1,jdbcType=VARCHAR}, 
      #{workip2,jdbcType=VARCHAR}, #{workip3,jdbcType=VARCHAR}, #{workip4,jdbcType=VARCHAR}, 
      #{workip5,jdbcType=VARCHAR}, #{workip6,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="WorkIps" >
    insert into workips
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fileid != null" >
        fileId,
      </if>
      <if test="workip1 != null" >
        workIp1,
      </if>
      <if test="workip2 != null" >
        workIp2,
      </if>
      <if test="workip3 != null" >
        workIp3,
      </if>
      <if test="workip4 != null" >
        workIp4,
      </if>
      <if test="workip5 != null" >
        workIp5,
      </if>
      <if test="workip6 != null" >
        workIp6,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fileid != null" >
        #{fileid,jdbcType=INTEGER},
      </if>
      <if test="workip1 != null" >
        #{workip1,jdbcType=VARCHAR},
      </if>
      <if test="workip2 != null" >
        #{workip2,jdbcType=VARCHAR},
      </if>
      <if test="workip3 != null" >
        #{workip3,jdbcType=VARCHAR},
      </if>
      <if test="workip4 != null" >
        #{workip4,jdbcType=VARCHAR},
      </if>
      <if test="workip5 != null" >
        #{workip5,jdbcType=VARCHAR},
      </if>
      <if test="workip6 != null" >
        #{workip6,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="WorkIps" >
    update workips
    <set >
      <if test="fileid != null" >
        fileId = #{fileid,jdbcType=INTEGER},
      </if>
      <if test="workip1 != null" >
        workIp1 = #{workip1,jdbcType=VARCHAR},
      </if>
      <if test="workip2 != null" >
        workIp2 = #{workip2,jdbcType=VARCHAR},
      </if>
      <if test="workip3 != null" >
        workIp3 = #{workip3,jdbcType=VARCHAR},
      </if>
      <if test="workip4 != null" >
        workIp4 = #{workip4,jdbcType=VARCHAR},
      </if>
      <if test="workip5 != null" >
        workIp5 = #{workip5,jdbcType=VARCHAR},
      </if>
      <if test="workip6 != null" >
        workIp6 = #{workip6,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="WorkIps" >
    update workips
    set fileId = #{fileid,jdbcType=INTEGER},
      workIp1 = #{workip1,jdbcType=VARCHAR},
      workIp2 = #{workip2,jdbcType=VARCHAR},
      workIp3 = #{workip3,jdbcType=VARCHAR},
      workIp4 = #{workip4,jdbcType=VARCHAR},
      workIp5 = #{workip5,jdbcType=VARCHAR},
      workIp6 = #{workip6,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <select id="queryByCondition" resultType="WorkIps" parameterType="WorkIps" >
    select 
    <include refid="Base_Column_List" />
    from workips
    <where>
    1=1
    <if test="workIps.id>0 "> and id=#{workIps.id}</if>
    <if test="workIps.field>0 "> and fileid=#{workIps.field}</if>
    </where>   
  </select>  
</mapper>