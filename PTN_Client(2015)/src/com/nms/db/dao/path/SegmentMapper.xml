<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nms.db.dao.path.SegmentMapper" >
  <resultMap id="BaseResultMap" type="Segment" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="NAME" jdbcType="VARCHAR" />
    <result column="BANDWIDTH" property="BANDWIDTH" jdbcType="VARCHAR" />
    <result column="TYPE" property="TYPE" jdbcType="INTEGER" />
    <result column="ASITEID" property="ASITEID" jdbcType="INTEGER" />
    <result column="speed" property="speedSegment" jdbcType="VARCHAR" />
    <result column="ZSITEID" property="ZSITEID" jdbcType="INTEGER" />
    <result column="APORTID" property="APORTID" jdbcType="INTEGER" />
    <result column="ZPORTID" property="ZPORTID" jdbcType="INTEGER" />
    <result column="CREATUSER" property="CREATUSER" jdbcType="VARCHAR" />
    <result column="CREATTIME" property="CREATTIME" jdbcType="TIMESTAMP" />
    <result column="ASLOT" property="aSlotNumber" jdbcType="INTEGER" />
    <result column="ZSLOT" property="zSlotNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, NAME, BANDWIDTH, TYPE, ASITEID, speed, ZSITEID, APORTID, ZPORTID, CREATUSER, 
    CREATTIME, ASLOT, ZSLOT
  </sql>
  <select id="queryBySiteIdAndPortId" resultMap="SegmentMap" parameterType="Segment" >
    SELECT s.ID, s.speed, s.NAME, s.BANDWIDTH, s.TYPE, s.ASITEID, s.ZSITEID, s.APORTID, s.ZPORTID, s.ASLOT, s.ZSLOT,sa.CellId AS showaSiteName,
     sz.CellId AS showzSiteName, pa.portName AS showaPortName, pz.portName AS showzPortName, s.CREATUSER, s.CREATTIME FROM segment s, site_inst sa,
      site_inst sz, port_inst pa, port_inst pz WHERE s.aSiteId = sa.site_inst_id AND s.zSiteId = sz.site_inst_id AND s.aPortId = pa.portId AND 
      s.zPortId = pz.portId
      <if test="ASITEID > 0">
     	 and (s.ASITEID = #{ASITEID} or s.ZSITEID = #{ASITEID})
      </if>
      <if test="APORTID > 0">
      	and (s.APORTID = #{APORTID} or s.ZPORTID = #{APORTID})
      </if>
  </select>
  
  <insert id="insert" parameterType="Segment" >
    insert into segment (ID, NAME, BANDWIDTH, 
      TYPE, ASITEID, speed, 
      ZSITEID, APORTID, ZPORTID, 
      CREATUSER, CREATTIME, ASLOT, 
      ZSLOT)
    values (#{id,jdbcType=INTEGER}, #{NAME,jdbcType=VARCHAR}, #{BANDWIDTH,jdbcType=VARCHAR}, 
      #{TYPE,jdbcType=INTEGER}, #{ASITEID,jdbcType=INTEGER}, #{speedSegment,jdbcType=VARCHAR}, 
      #{ZSITEID,jdbcType=INTEGER}, #{APORTID,jdbcType=INTEGER}, #{ZPORTID,jdbcType=INTEGER}, 
      #{CREATUSER,jdbcType=VARCHAR}, #{CREATTIME,jdbcType=TIMESTAMP}, #{aSlotNumber,jdbcType=INTEGER}, 
      #{zSlotNumber,jdbcType=INTEGER})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="Segment" >
    update segment
    set NAME = #{NAME,jdbcType=VARCHAR},
      BANDWIDTH = #{BANDWIDTH,jdbcType=VARCHAR},
      TYPE = #{TYPE,jdbcType=INTEGER},
      ASITEID = #{ASITEID,jdbcType=INTEGER},
      speed = #{speedSegment,jdbcType=VARCHAR},
      ZSITEID = #{ZSITEID,jdbcType=INTEGER},
      APORTID = #{APORTID,jdbcType=INTEGER},
      ZPORTID = #{ZPORTID,jdbcType=INTEGER},
      CREATUSER = #{CREATUSER,jdbcType=VARCHAR},
      CREATTIME = #{CREATTIME,jdbcType=TIMESTAMP},
      ASLOT = #{aSlotNumber,jdbcType=INTEGER},
      ZSLOT = #{zSlotNumber,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="query_site" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from segment
   where asiteid=#{siteId} or zsiteid=#{siteId}
  </select>
  <select id="queryByCondition" resultMap="SegmentMap" parameterType="Segment" >
    SELECT s.ID, s.NAME, s.BANDWIDTH, s.TYPE, s.ASITEID, s.ZSITEID, s.APORTID, s.ZPORTID,s.ASLOT, 
    s.ZSLOT,s.speed,sa.CellId AS showaSiteName, sz.CellId AS showzSiteName, pa.portName AS showaPortName, 
    pz.portName AS showzPortName, s.CREATUSER, s.CREATTIME ,sa.site_inst_id as saSiteid,sz.site_inst_id as szSiteId,
    pa.portId as paPortId,pz.portId as pzPortId FROM segment s, site_inst sa, site_inst sz, 
    port_inst pa, port_inst pz 
    <where>
    s.ASITEID = sa.site_inst_id AND s.ZSITEID = sz.site_inst_id AND s.APORTID = pa.portId AND s.ZPORTID = pz.portId
    <if test="segment.id>0 "> and s.ID=#{segment.id}</if>
    <if test="segment.NAME!=null and segment.NAME!='' "> and s.NAME like '%${segment.NAME}%'</if>
    <if test="segment.ASITEID!=0 "> and s.ASITEID=#{segment.ASITEID}</if>
    <if test="segment.ZSITEID!=0 "> and s.ZSITEID=#{segment.ZSITEID}</if>
    <if test="segment.APORTID!=0 "> and s.APORTID=#{segment.APORTID}</if>
    <if test="segment.ZPORTID!=0 "> and s.ZPORTID=#{segment.ZPORTID}</if>
    <if test="segment.speedSegment!=null and segment.speedSegment!='' "> and s.speed=#{segment.speedSegment}</if>
    <if test="segment.CREATUSER!=null and segment.CREATUSER!='' "> and s.CREATUSER=#{segment.CREATUSER}</if> 
    </where> 
  </select>
  <resultMap id="SegmentMap" type="Segment" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="NAME" jdbcType="VARCHAR" />
    <result column="BANDWIDTH" property="BANDWIDTH" jdbcType="VARCHAR" />
    <result column="TYPE" property="TYPE" jdbcType="INTEGER" />
    <result column="ASITEID" property="ASITEID" jdbcType="INTEGER" />
    <result column="speed" property="speedSegment" jdbcType="VARCHAR" />
    <result column="ZSITEID" property="ZSITEID" jdbcType="INTEGER" />
    <result column="APORTID" property="APORTID" jdbcType="INTEGER" />
    <result column="ZPORTID" property="ZPORTID" jdbcType="INTEGER" />
    <result column="CREATUSER" property="CREATUSER" jdbcType="VARCHAR" />
    <result column="CREATTIME" property="CREATTIME" jdbcType="TIMESTAMP" />
    <result column="ASLOT" property="aSlotNumber" jdbcType="INTEGER" />
    <result column="ZSLOT" property="zSlotNumber" jdbcType="INTEGER" /> 
    <result column="showaSiteName" property="ShowSiteAname" jdbcType="INTEGER" />
    <result column="showzSiteName" property="ShowSiteZname" jdbcType="INTEGER" />
    <result column="showaPortName" property="ShowPortAname" jdbcType="INTEGER" />
    <result column="showzPortName" property="ShowPortZname" jdbcType="INTEGER" /> 
  </resultMap>
 <select id="query_name" resultType="java.lang.Integer" parameterType="map">
    select count(*) as selectcount from segment where name=#{afterName}
    <if test="beforeName!=null">and name!=#{beforeName}</if>
  </select>

  <select id="query_SegmentPortId" resultType="Segment" parameterType="java.lang.Integer">
    select * from segment where aportid=#{portId} or zportid=#{portId}
  </select>
  
  <select id="queryBySiteId" resultMap="SegmentMap" parameterType="java.lang.Integer">
    SELECT s.ID, s.NAME,s.speed,s.BANDWIDTH, s.TYPE, s.ASITEID, s.ZSITEID, s.APORTID, s.ZPORTID, s.ASLOT, s.ZSLOT,sa.CellId AS showaSiteName, 
    sz.CellId AS showzSiteName, pa.portName AS showaPortName, pz.portName AS showzPortName, s.CREATUSER, s.CREATTIME FROM segment s, site_inst sa, 
    site_inst sz, port_inst pa, port_inst pz WHERE s.aSiteId = sa.site_inst_id AND s.zSiteId = sz.site_inst_id AND s.aPortId = pa.portId AND 
    s.zPortId = pz.portId
    <if test="siteInstID > 0">
    	and (s.ASITEID=#{siteInstID} or s.ZSITEID=#{siteInstID} )
    </if>
  </select>
  
  <select id="query_search" resultType="Segment" parameterType="java.lang.Integer">
    select * from segment where (APORTID=#{0} AND ZPORTID =#{1} ) or (APORTID=#{1} AND ZPORTID=#{0})
  </select>
  
  <delete id="deletById" parameterType="java.lang.Integer">
  	delete from segment where ID=#{0}
  </delete>
</mapper>